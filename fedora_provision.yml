---
# User who triggered the playbook
- hosts: localhost
  connection: local
  tasks:
    - name: Save username
      shell: whoami
      register: username


# Runs as sudo, user operations must be scoped using {{ username.stdout }}
# Or become: no
- name: Configure Fedora Workstation
  hosts: localhost
  become: true

  tasks:
    # Add custom repositories
    - name: Add VSCode repository
      yum_repository:
        name: vscode
        description: VSCode YUM Repo
        baseurl: https://packages.microsoft.com/yumrepos/vscode
        gpgcheck: yes
        gpgkey: https://packages.microsoft.com/keys/microsoft.asc

    # Update all packages
    - name: Ensure all packages are up to date
      dnf:
        name: "*"
        state: latest

    # Install essential packages
    - name: Install common packages
      dnf:
        name:
          - git
          - gnome-tweaks
          - curl
          - htop
          - neovim
          - toolbox
          - lsd # nice ls view
          - bat # nice cat view
          - remmina # rdp application
          - code
          - chromium
          - hugo # static site generator
          - eog # eye of gnome, makes eog filename.png open up img
          - hstr # history similar to PSReadLine ListView
          - gnome-screenshot
          - python3-psutil
        state: present

    - name: Remove common packages
      dnf:
        name:
          - gnome-tour
        state: absent

    # Set GNOME settings (example to disable desktop icons)
    - name: Disable desktop icons in GNOME
      command: gsettings set org.gnome.desktop.background show-desktop-icons false

    # Install Flatpak applications using shell commands to ensure user scope
    - name: Add Flathub repository to user installation
      ansible.builtin.shell: |
        flatpak --user remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
      args:
        creates: "{{ ansible_env.HOME }}/.local/share/flatpak/repo/flathub"
      become: no

    - name: Install Flatpak applications in user scope
      ansible.builtin.shell: |
        flatpak --user install -y flathub {{ item }}
      loop:
        - com.bitwarden.desktop
        - com.spotify.Client
        - md.obsidian.Obsidian
        - org.gnome.Extensions
        - org.gnome.Evolution
        - org.signal.Signal
        - org.kde.kolourpaint
      args:
        creates: "{{ ansible_env.HOME }}/.local/share/flatpak/app/{{ item }}"
      become: no

    # Bashrc configs
    - name: Add "logoff" alias to .bashrc
      lineinfile:
        path: /home/{{ username.stdout }}/.bashrc
        line: "alias logoff='gnome-session-quit --logout --no-prompt'"
        state: present

    - name: Add "ll" alias to .bashrc
      lineinfile:
        path: /home/{{ username.stdout }}/.bashrc
        line: "alias ll='lsd -la'"
        state: present
    
    - name: Add z script
      lineinfile:
        path: /home/{{ username.stdout }}/.bashrc
        line: ". ~/code/z/z.sh"
        state: present

    # Get and set the history inline view (hstr), don't use
    # reverse search til they fix the security issue (2024-10-30)
    # This is why I only use the first 7 lines of the config
    - name: Configure hstr in bashrc with specific lines
      command: hstr --show-bash-configuration
      register: hstr_config

    - name: Ensure specific hstr config is present in .bashrc
      blockinfile:
        path: ~/.bashrc
        marker: "# {mark} HSTR configuration"
        content: "{{ hstr_config.stdout.splitlines()[:7] | join('\n') }}"
      when: hstr_config.stdout.splitlines()[:7] | join('\n') not in lookup('file', '~/.bashrc', errors='ignore')
      become: no

    # Create folders
    - name: Create some directories
      file:
        path: "/home/{{ username.stdout }}/{{ item }}"
        state: directory
        owner: "{{ username.stdout }}"
        group: "{{ username.stdout }}"
      with_items:
      - code
      - Pictures/Screenshots
      - .local/share/fonts/SF-Pro
      - .local/share/fonts/SF-nerdfonts

    # Clone repos
    - name: Clone z repo
      ansible.builtin.git:
        repo: "https://github.com/rupa/z.git"
        dest: "/home/{{  username.stdout }}/code/z"
        version: master
        force: yes
    
    - name: Clone BashCraft
      ansible.builtin.git:
        repo: "https://github.com/ehmiiz/bashcraft.git"
        dest: "/home/{{  username.stdout }}/code/bashcraft"
        version: main
        force: yes

    # Clones my blog, inits the themes submodule
    - name: Clone ehmiizblog if not present
      ansible.builtin.git:
        repo: "https://github.com/ehmiiz/ehmiizblog.git"
        dest: "/home/{{ username.stdout }}/code/ehmiizblog"
        update: no
        force: yes
      register: clone_status
      become: yes
      become_user: "{{ username.stdout }}"

    - name: Initialize git submodules
      ansible.builtin.command: git submodule init
      args:
        chdir: "/home/{{ username.stdout }}/code/ehmiizblog"
      when: clone_status.changed
      become: yes
      become_user: "{{ username.stdout }}"

    - name: Update git submodules
      ansible.builtin.command: git submodule update
      args:
        chdir: "/home/{{ username.stdout }}/code/ehmiizblog"
      when: clone_status.changed
      become: yes
      become_user: "{{ username.stdout }}"

    # Fix font
    - name: Ensure environment.d directory exists
      ansible.builtin.file:
        path: "/home/{{ username.stdout }}/.config/environment.d"
        state: directory
        owner: "{{ username.stdout }}"
        group: "{{ username.stdout }}"
        mode: '0755'
      become: yes

    - name: Enhance fonts
      ansible.builtin.lineinfile:
        path: "/home/{{ username.stdout }}/.config/environment.d/envvars.conf"
        line: 'FREETYPE_PROPERTIES="cff:no-stem-darkening=0 autofitter:no-stem-darkening=0"'
        create: yes
        state: present
      become: yes

    # Clone the San Francisco Pro Fonts repository
    - name: Clone the SF Pro Fonts repository
      ansible.builtin.git:
        repo: "https://github.com/sahibjotsaggu/San-Francisco-Pro-Fonts.git"
        dest: "/tmp/SF-Pro-Fonts"
        version: master
        force: yes

    # Move the specific font files to the .local font directory
    - name: Copy SF-Pro-Italic.ttf and SF-Pro.ttf to font directory
      ansible.builtin.copy:
        src: "/tmp/SF-Pro-Fonts/SF-Pro-Italic.ttf"
        dest: "/home/{{ username.stdout }}/.local/share/fonts/SF-Pro/"
        remote_src: yes

    - name: Copy SF-Pro.ttf to font directory
      ansible.builtin.copy:
        src: "/tmp/SF-Pro-Fonts/SF-Pro.ttf"
        dest: "/home/{{ username.stdout }}/.local/share/fonts/SF-Pro/"
        remote_src: yes

    # Clone the nerdfont repository
    - name: Clone the SF Pro Fonts repository
      ansible.builtin.git:
        repo: "https://github.com/shaunsingh/SFMono-Nerd-Font-Ligaturized.git"
        dest: "/tmp/SF-nerdfonts"
        version: main
        force: yes

    # Move the nerd font folder to the .local font directory
    - name: Copy SF-Pro-Italic.ttf and SF-Pro.ttf to font directory
      ansible.builtin.copy:
        src: "/tmp/SF-nerdfonts"
        dest: "/home/{{ username.stdout }}/.local/share/fonts/SF-nerdfonts/"
        remote_src: yes

    # Refresh font cache
    - name: Refresh font cache
      ansible.builtin.shell:
        cmd: "fc-cache -fv"
  
    # Set GNOME interface settings with gsettings
    - name: Set font hinting to none
      ansible.builtin.command: >
        gsettings set org.gnome.desktop.interface font-hinting 'none'
      become: no

    - name: Set interface font to SF Pro with specific weight and optical size
      ansible.builtin.command: >
        gsettings set org.gnome.desktop.interface font-name 'SF Pro weight=274 14 @opsz=17,wght=270'
      become: no

    - name: Set monospace font to Liga SFMono Nerd Font
      ansible.builtin.command: >
        gsettings set org.gnome.desktop.interface monospace-font-name 'Liga SFMono Nerd Font 14'
      become: no

    - name: Set text scaling factor to 0.75
      ansible.builtin.command: >
        gsettings set org.gnome.desktop.interface text-scaling-factor 0.75
      become: no

    - name: Set terminal theme variant to dark
      ansible.builtin.command: >
        gsettings set org.gnome.Terminal.Legacy.Settings theme-variant 'dark'
      become: no

    - name: Disable GNOME animations
      ansible.builtin.command: >
        gsettings set org.gnome.desktop.interface enable-animations false
      become: no

    - name: Enable tap-to-click on touchpad
      ansible.builtin.command: >
        gsettings set org.gnome.desktop.peripherals.touchpad tap-to-click true
      become: no

    - name: Enable two-finger secondary click on touchpad
      ansible.builtin.command: >
        gsettings set org.gnome.desktop.peripherals.touchpad click-method 'fingers'
      become: no

      # Download and set wallpaper to black
    - name: Download a black wallpaper
      ansible.builtin.get_url:
        url: https://i.imgur.com/JIYqdUW.png
        dest: /home/{{ username.stdout }}/Pictures/black.png
        mode: '0440'

    - name: Set the wallpaper for dark mode
      ansible.builtin.command: >
        gsettings set org.gnome.desktop.background picture-uri-dark file:///home/{{ username.stdout }}/Pictures/black.png
      become: no

    - name: Set the wallpaper for light mode
      ansible.builtin.command: >
        gsettings set org.gnome.desktop.background picture-uri file:///home/{{ username.stdout }}/Pictures/black.png
      become: no

    - name: Use 'wallpaper' as picture option
      ansible.builtin.command: >
        gsettings set org.gnome.desktop.background picture-options 'wallpaper'
      become: no

    # Custom Keybinds
    - name: Screenshot shortcut name
      community.general.dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/name"
        value: "'screenshot'"
    - name: Screenshot shortcut command
      community.general.dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/command"
        value: "'bash /home/{{ username.stdout }}/code/bashcraft/screenshot.sh'"
    - name: Screenshot shortcut binding
      community.general.dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/binding"
        value: "'<Shift><Control>b'"